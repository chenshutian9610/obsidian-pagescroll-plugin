/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PageScrollPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var PageScrollPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "page-scroll-down-command",
      name: "page-down",
      callback: () => this.scroll("down"),
      hotkeys: [{ key: "AudioVolumeDown", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-up-command",
      name: "page-up",
      callback: () => this.scroll("up"),
      hotkeys: [{ key: "AudioVolumeUp", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-top-command",
      name: "page-top",
      callback: () => this.scroll("top")
    });
    this.addCommand({
      id: "page-scroll-bottom-command",
      name: "page-bottom",
      callback: () => this.scroll("bottom")
    });
    if (this.app.isMobile) {
      this.registerButton("top", "\u21C8", 32, 2);
      this.registerButton("up", "\u2191", 24, 2);
      this.registerButton("down", "\u2193", 16, 2);
      this.registerButton("bottom", "\u21CA", 8, 2);
    } else {
      this.registerButton("top", "\u21C8", 16, 1);
      this.registerButton("up", "\u2191", 12, 1);
      this.registerButton("down", "\u2193", 8, 1);
      this.registerButton("bottom", "\u21CA", 4, 1);
    }
  }
  onunload() {
    this.clearButton();
  }
  currentView() {
    return this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
  }
  /** mode = top|bottom|up|down */
  scroll(mode) {
    var _a, _b, _c, _d;
    console.log("scroll", mode);
    let thisView = this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
    let thisScrollObj = (thisView == null ? void 0 : thisView.getMode()) == "preview" ? (_b = (_a = thisView == null ? void 0 : thisView.previewMode) == null ? void 0 : _a.renderer) == null ? void 0 : _b.previewEl : (_d = (_c = thisView == null ? void 0 : thisView.editMode) == null ? void 0 : _c.cm) == null ? void 0 : _d.scrollDOM;
    if (!thisScrollObj) {
      console.error("scroll failed ==> scrollObj is missing");
      return;
    }
    let range = thisScrollObj.clientHeight - 60;
    switch (mode) {
      case "up":
        thisScrollObj.scrollBy(0, -range);
        break;
      case "down":
        thisScrollObj.scrollBy(0, range);
        break;
      case "top":
        thisScrollObj.scroll(0, 0);
        break;
      case "bottom":
        thisScrollObj.scroll(0, thisScrollObj.scrollHeight);
        break;
    }
  }
  /** 创建按钮 */
  registerButton(mode, name, offsetBottom, offsetRight) {
    let self = this;
    let buttonId = mode + "TriskiPageBtn";
    if (!document.getElementById(buttonId)) {
      let button = document.createElement("button");
      button.id = buttonId;
      button.style = `position: absolute; bottom: ${offsetBottom}%; right: ${offsetRight}%; background-color: transparent; width: 27px; border-color: black;`;
      button.onclick = () => self.scroll(mode);
      button.innerHTML = name;
      document.body.appendChild(button);
    }
  }
  /** 删除按钮 */
  clearButton() {
    var _a, _b, _c, _d;
    (_a = document.getElementById("upTriskiPageBtn")) == null ? void 0 : _a.remove();
    (_b = document.getElementById("downTriskiPageBtn")) == null ? void 0 : _b.remove();
    (_c = document.getElementById("topTriskiPageBtn")) == null ? void 0 : _c.remove();
    (_d = document.getElementById("bottomTriskiPageBtn")) == null ? void 0 : _d.remove();
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgTWFya2Rvd25WaWV3LCBQbHVnaW4gfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZVNjcm9sbFBsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG4gIGFzeW5jIG9ubG9hZCgpIHtcbiAgICAvKiBcdTU0N0RcdTRFRTQgKi9cblxuICAgIHRoaXMuYWRkQ29tbWFuZCh7XG4gICAgICBpZDogXCJwYWdlLXNjcm9sbC1kb3duLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS1kb3duXCIsXG4gICAgICBjYWxsYmFjazogKCkgPT4gdGhpcy5zY3JvbGwoXCJkb3duXCIpLFxuICAgICAgaG90a2V5czogW3sga2V5OiBcIkF1ZGlvVm9sdW1lRG93blwiLCBtb2RpZmllcnM6IFtdIH1dLFxuICAgIH0pO1xuXG4gICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgIGlkOiBcInBhZ2Utc2Nyb2xsLXVwLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS11cFwiLFxuICAgICAgY2FsbGJhY2s6ICgpID0+IHRoaXMuc2Nyb2xsKFwidXBcIiksXG4gICAgICBob3RrZXlzOiBbeyBrZXk6IFwiQXVkaW9Wb2x1bWVVcFwiLCBtb2RpZmllcnM6IFtdIH1dLFxuICAgIH0pO1xuXG4gICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgIGlkOiBcInBhZ2Utc2Nyb2xsLXRvcC1jb21tYW5kXCIsXG4gICAgICBuYW1lOiBcInBhZ2UtdG9wXCIsXG4gICAgICBjYWxsYmFjazogKCkgPT4gdGhpcy5zY3JvbGwoXCJ0b3BcIiksXG4gICAgfSk7XG5cbiAgICB0aGlzLmFkZENvbW1hbmQoe1xuICAgICAgaWQ6IFwicGFnZS1zY3JvbGwtYm90dG9tLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS1ib3R0b21cIixcbiAgICAgIGNhbGxiYWNrOiAoKSA9PiB0aGlzLnNjcm9sbChcImJvdHRvbVwiKSxcbiAgICB9KTtcblxuICAgIC8qIFx1NjMwOVx1OTRBRVx1RkYwQ1x1NzlGQlx1NTJBOFx1N0FFRlx1NTQ4Q1x1Njg0Q1x1OTc2Mlx1N0FFRlx1NEY0RFx1N0Y2RVx1NEUwRFx1NTQwQyAqL1xuICAgIGlmICh0aGlzLmFwcC5pc01vYmlsZSkge1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcInRvcFwiLCBcIlx1MjFDOFwiLCAzMiwgMik7XG4gICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uKFwidXBcIiwgXCJcdTIxOTFcIiwgMjQsIDIpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImRvd25cIiwgXCJcdTIxOTNcIiwgMTYsIDIpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImJvdHRvbVwiLCBcIlx1MjFDQVwiLCA4LCAyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcInRvcFwiLCBcIlx1MjFDOFwiLCAxNiwgMSk7XG4gICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uKFwidXBcIiwgXCJcdTIxOTFcIiwgMTIsIDEpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImRvd25cIiwgXCJcdTIxOTNcIiwgOCwgMSk7XG4gICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uKFwiYm90dG9tXCIsIFwiXHUyMUNBXCIsIDQsIDEpO1xuICAgIH1cbiAgfVxuXG4gIG9udW5sb2FkKCkge1xuICAgIHRoaXMuY2xlYXJCdXR0b24oKTtcbiAgfVxuXG4gIGN1cnJlbnRWaWV3KCkge1xuICAgIHJldHVybiB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0QWN0aXZlVmlld09mVHlwZShNYXJrZG93blZpZXcpO1xuICB9XG5cbiAgLyoqIG1vZGUgPSB0b3B8Ym90dG9tfHVwfGRvd24gKi9cbiAgc2Nyb2xsKG1vZGU6IHN0cmluZykge1xuICAgIGNvbnNvbGUubG9nKFwic2Nyb2xsXCIsIG1vZGUpO1xuICAgIGxldCB0aGlzVmlldyA9IHRoaXMuYXBwLndvcmtzcGFjZS5nZXRBY3RpdmVWaWV3T2ZUeXBlKE1hcmtkb3duVmlldyk7XG4gICAgbGV0IHRoaXNTY3JvbGxPYmogPVxuICAgICAgdGhpc1ZpZXc/LmdldE1vZGUoKSA9PSBcInByZXZpZXdcIlxuICAgICAgICA/IHRoaXNWaWV3Py5wcmV2aWV3TW9kZT8ucmVuZGVyZXI/LnByZXZpZXdFbFxuICAgICAgICA6IHRoaXNWaWV3Py5lZGl0TW9kZT8uY20/LnNjcm9sbERPTTtcbiAgICBpZiAoIXRoaXNTY3JvbGxPYmopIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJzY3JvbGwgZmFpbGVkID09PiBzY3JvbGxPYmogaXMgbWlzc2luZ1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHJhbmdlID0gdGhpc1Njcm9sbE9iai5jbGllbnRIZWlnaHQgLSA2MDtcbiAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgIGNhc2UgXCJ1cFwiOlxuICAgICAgICB0aGlzU2Nyb2xsT2JqLnNjcm9sbEJ5KDAsIC1yYW5nZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImRvd25cIjpcbiAgICAgICAgdGhpc1Njcm9sbE9iai5zY3JvbGxCeSgwLCByYW5nZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInRvcFwiOlxuICAgICAgICB0aGlzU2Nyb2xsT2JqLnNjcm9sbCgwLCAwKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiYm90dG9tXCI6XG4gICAgICAgIHRoaXNTY3JvbGxPYmouc2Nyb2xsKDAsIHRoaXNTY3JvbGxPYmouc2Nyb2xsSGVpZ2h0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgLyoqIFx1NTIxQlx1NUVGQVx1NjMwOVx1OTRBRSAqL1xuICByZWdpc3RlckJ1dHRvbihcbiAgICBtb2RlOiBzdHJpbmcsXG4gICAgbmFtZTogc3RyaW5nLFxuICAgIG9mZnNldEJvdHRvbTogbnVtYmVyLFxuICAgIG9mZnNldFJpZ2h0OiBudW1iZXJcbiAgKSB7XG4gICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgIGxldCBidXR0b25JZCA9IG1vZGUgKyBcIlRyaXNraVBhZ2VCdG5cIjtcbiAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJ1dHRvbklkKSkge1xuICAgICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICBidXR0b24uaWQgPSBidXR0b25JZDtcbiAgICAgIGJ1dHRvbi5zdHlsZSA9IGBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogJHtvZmZzZXRCb3R0b219JTsgcmlnaHQ6ICR7b2Zmc2V0UmlnaHR9JTsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IHdpZHRoOiAyN3B4OyBib3JkZXItY29sb3I6IGJsYWNrO2A7XG4gICAgICBidXR0b24ub25jbGljayA9ICgpID0+IHNlbGYuc2Nyb2xsKG1vZGUpO1xuICAgICAgYnV0dG9uLmlubmVySFRNTCA9IG5hbWU7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgfVxuICB9XG5cbiAgLyoqIFx1NTIyMFx1OTY2NFx1NjMwOVx1OTRBRSAqL1xuICBjbGVhckJ1dHRvbigpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVwVHJpc2tpUGFnZUJ0blwiKT8ucmVtb3ZlKCk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkb3duVHJpc2tpUGFnZUJ0blwiKT8ucmVtb3ZlKCk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b3BUcmlza2lQYWdlQnRuXCIpPy5yZW1vdmUoKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJvdHRvbVRyaXNraVBhZ2VCdG5cIik/LnJlbW92ZSgpO1xuICB9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQXFD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
