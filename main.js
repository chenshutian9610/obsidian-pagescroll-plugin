/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PageScrollPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var PageScrollPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "page-scroll-down-command",
      name: "page-down",
      callback: () => this.scroll("down"),
      hotkeys: [{ key: "AudioVolumeDown", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-up-command",
      name: "page-up",
      callback: () => this.scroll("up"),
      hotkeys: [{ key: "AudioVolumeUp", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-top-command",
      name: "page-top",
      callback: () => this.scroll("top")
    });
    this.addCommand({
      id: "page-scroll-bottom-command",
      name: "page-bottom",
      callback: () => this.scroll("bottom")
    });
    if (this.app.isMobile) {
      this.registerButton("top", "\u21C8", 64, 2);
      this.registerButton("up", "\u2191", 56, 2);
      this.registerButton("down", "\u2193", 48, 2);
      this.registerButton("bottom", "\u21CA", 40, 2);
    } else {
      this.registerButton("top", "\u21C8", 16, 1);
      this.registerButton("up", "\u2191", 12, 1);
      this.registerButton("down", "\u2193", 8, 1);
      this.registerButton("bottom", "\u21CA", 4, 1);
    }
  }
  onunload() {
    this.clearButton();
  }
  currentView() {
    return this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
  }
  /** mode = top|bottom|up|down */
  scroll(mode) {
    var _a, _b, _c, _d;
    console.log("scroll", mode);
    let thisView = this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
    let thisScrollObj = (thisView == null ? void 0 : thisView.getMode()) == "preview" ? (_b = (_a = thisView == null ? void 0 : thisView.previewMode) == null ? void 0 : _a.renderer) == null ? void 0 : _b.previewEl : (_d = (_c = thisView == null ? void 0 : thisView.editMode) == null ? void 0 : _c.cm) == null ? void 0 : _d.scrollDOM;
    if (!thisScrollObj) {
      console.error("scroll failed ==> scrollObj is missing");
      return;
    }
    let range = thisScrollObj.clientHeight - 60;
    switch (mode) {
      case "up":
        thisScrollObj.scrollBy(0, -range);
        break;
      case "down":
        thisScrollObj.scrollBy(0, range);
        break;
      case "top":
        thisScrollObj.scroll(0, 0);
        break;
      case "bottom":
        thisScrollObj.scroll(0, thisScrollObj.scrollHeight);
        break;
    }
  }
  /** 创建按钮 */
  registerButton(mode, name, offsetBottom, offsetRight) {
    let self = this;
    let buttonId = mode + "TriskiPageBtn";
    if (!document.getElementById(buttonId)) {
      let button = document.createElement("button");
      button.id = buttonId;
      button.style = `position: absolute; bottom: ${offsetBottom}%; right: ${offsetRight}%; background-color: transparent; width: 27px; border-color: black;`;
      button.onclick = () => self.scroll(mode);
      button.innerHTML = name;
      document.body.appendChild(button);
    }
  }
  /** 删除按钮 */
  clearButton() {
    var _a, _b, _c, _d;
    (_a = document.getElementById("upTriskiPageBtn")) == null ? void 0 : _a.remove();
    (_b = document.getElementById("downTriskiPageBtn")) == null ? void 0 : _b.remove();
    (_c = document.getElementById("topTriskiPageBtn")) == null ? void 0 : _c.remove();
    (_d = document.getElementById("bottomTriskiPageBtn")) == null ? void 0 : _d.remove();
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgTWFya2Rvd25WaWV3LCBQbHVnaW4gfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZVNjcm9sbFBsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG4gIGFzeW5jIG9ubG9hZCgpIHtcbiAgICAvKiBcdTU0N0RcdTRFRTQgKi9cblxuICAgIHRoaXMuYWRkQ29tbWFuZCh7XG4gICAgICBpZDogXCJwYWdlLXNjcm9sbC1kb3duLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS1kb3duXCIsXG4gICAgICBjYWxsYmFjazogKCkgPT4gdGhpcy5zY3JvbGwoXCJkb3duXCIpLFxuICAgICAgaG90a2V5czogW3sga2V5OiBcIkF1ZGlvVm9sdW1lRG93blwiLCBtb2RpZmllcnM6IFtdIH1dLFxuICAgIH0pO1xuXG4gICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgIGlkOiBcInBhZ2Utc2Nyb2xsLXVwLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS11cFwiLFxuICAgICAgY2FsbGJhY2s6ICgpID0+IHRoaXMuc2Nyb2xsKFwidXBcIiksXG4gICAgICBob3RrZXlzOiBbeyBrZXk6IFwiQXVkaW9Wb2x1bWVVcFwiLCBtb2RpZmllcnM6IFtdIH1dLFxuICAgIH0pO1xuXG4gICAgdGhpcy5hZGRDb21tYW5kKHtcbiAgICAgIGlkOiBcInBhZ2Utc2Nyb2xsLXRvcC1jb21tYW5kXCIsXG4gICAgICBuYW1lOiBcInBhZ2UtdG9wXCIsXG4gICAgICBjYWxsYmFjazogKCkgPT4gdGhpcy5zY3JvbGwoXCJ0b3BcIiksXG4gICAgfSk7XG5cbiAgICB0aGlzLmFkZENvbW1hbmQoe1xuICAgICAgaWQ6IFwicGFnZS1zY3JvbGwtYm90dG9tLWNvbW1hbmRcIixcbiAgICAgIG5hbWU6IFwicGFnZS1ib3R0b21cIixcbiAgICAgIGNhbGxiYWNrOiAoKSA9PiB0aGlzLnNjcm9sbChcImJvdHRvbVwiKSxcbiAgICB9KTtcblxuICAgIC8qIFx1NjMwOVx1OTRBRVx1RkYwQ1x1NzlGQlx1NTJBOFx1N0FFRlx1NTQ4Q1x1Njg0Q1x1OTc2Mlx1N0FFRlx1NEY0RFx1N0Y2RVx1NEUwRFx1NTQwQyAqL1xuICAgIGlmICh0aGlzLmFwcC5pc01vYmlsZSkge1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcInRvcFwiLCBcIlx1MjFDOFwiLCA2NCwgMik7XG4gICAgICB0aGlzLnJlZ2lzdGVyQnV0dG9uKFwidXBcIiwgXCJcdTIxOTFcIiwgNTYsIDIpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImRvd25cIiwgXCJcdTIxOTNcIiwgNDgsIDIpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImJvdHRvbVwiLCBcIlx1MjFDQVwiLCA0MCwgMik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVnaXN0ZXJCdXR0b24oXCJ0b3BcIiwgXCJcdTIxQzhcIiwgMTYsIDEpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcInVwXCIsIFwiXHUyMTkxXCIsIDEyLCAxKTtcbiAgICAgIHRoaXMucmVnaXN0ZXJCdXR0b24oXCJkb3duXCIsIFwiXHUyMTkzXCIsIDgsIDEpO1xuICAgICAgdGhpcy5yZWdpc3RlckJ1dHRvbihcImJvdHRvbVwiLCBcIlx1MjFDQVwiLCA0LCAxKTtcbiAgICB9XG4gIH1cblxuICBvbnVubG9hZCgpIHtcbiAgICB0aGlzLmNsZWFyQnV0dG9uKCk7XG4gIH1cblxuICBjdXJyZW50VmlldygpIHtcbiAgICByZXR1cm4gdGhpcy5hcHAud29ya3NwYWNlLmdldEFjdGl2ZVZpZXdPZlR5cGUoTWFya2Rvd25WaWV3KTtcbiAgfVxuXG4gIC8qKiBtb2RlID0gdG9wfGJvdHRvbXx1cHxkb3duICovXG4gIHNjcm9sbChtb2RlOiBzdHJpbmcpIHtcbiAgICBjb25zb2xlLmxvZyhcInNjcm9sbFwiLCBtb2RlKTtcbiAgICBsZXQgdGhpc1ZpZXcgPSB0aGlzLmFwcC53b3Jrc3BhY2UuZ2V0QWN0aXZlVmlld09mVHlwZShNYXJrZG93blZpZXcpO1xuICAgIGxldCB0aGlzU2Nyb2xsT2JqID1cbiAgICAgIHRoaXNWaWV3Py5nZXRNb2RlKCkgPT0gXCJwcmV2aWV3XCJcbiAgICAgICAgPyB0aGlzVmlldz8ucHJldmlld01vZGU/LnJlbmRlcmVyPy5wcmV2aWV3RWxcbiAgICAgICAgOiB0aGlzVmlldz8uZWRpdE1vZGU/LmNtPy5zY3JvbGxET007XG4gICAgaWYgKCF0aGlzU2Nyb2xsT2JqKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwic2Nyb2xsIGZhaWxlZCA9PT4gc2Nyb2xsT2JqIGlzIG1pc3NpbmdcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCByYW5nZSA9IHRoaXNTY3JvbGxPYmouY2xpZW50SGVpZ2h0IC0gNjA7XG4gICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICBjYXNlIFwidXBcIjpcbiAgICAgICAgdGhpc1Njcm9sbE9iai5zY3JvbGxCeSgwLCAtcmFuZ2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJkb3duXCI6XG4gICAgICAgIHRoaXNTY3JvbGxPYmouc2Nyb2xsQnkoMCwgcmFuZ2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ0b3BcIjpcbiAgICAgICAgdGhpc1Njcm9sbE9iai5zY3JvbGwoMCwgMCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImJvdHRvbVwiOlxuICAgICAgICB0aGlzU2Nyb2xsT2JqLnNjcm9sbCgwLCB0aGlzU2Nyb2xsT2JqLnNjcm9sbEhlaWdodCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBcdTUyMUJcdTVFRkFcdTYzMDlcdTk0QUUgKi9cbiAgcmVnaXN0ZXJCdXR0b24oXG4gICAgbW9kZTogc3RyaW5nLFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICBvZmZzZXRCb3R0b206IG51bWJlcixcbiAgICBvZmZzZXRSaWdodDogbnVtYmVyXG4gICkge1xuICAgIGxldCBzZWxmID0gdGhpcztcbiAgICBsZXQgYnV0dG9uSWQgPSBtb2RlICsgXCJUcmlza2lQYWdlQnRuXCI7XG4gICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChidXR0b25JZCkpIHtcbiAgICAgIGxldCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgYnV0dG9uLmlkID0gYnV0dG9uSWQ7XG4gICAgICBidXR0b24uc3R5bGUgPSBgcG9zaXRpb246IGFic29sdXRlOyBib3R0b206ICR7b2Zmc2V0Qm90dG9tfSU7IHJpZ2h0OiAke29mZnNldFJpZ2h0fSU7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB3aWR0aDogMjdweDsgYm9yZGVyLWNvbG9yOiBibGFjaztgO1xuICAgICAgYnV0dG9uLm9uY2xpY2sgPSAoKSA9PiBzZWxmLnNjcm9sbChtb2RlKTtcbiAgICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBuYW1lO1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChidXR0b24pO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBcdTUyMjBcdTk2NjRcdTYzMDlcdTk0QUUgKi9cbiAgY2xlYXJCdXR0b24oKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1cFRyaXNraVBhZ2VCdG5cIik/LnJlbW92ZSgpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZG93blRyaXNraVBhZ2VCdG5cIik/LnJlbW92ZSgpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9wVHJpc2tpUGFnZUJ0blwiKT8ucmVtb3ZlKCk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3R0b21Ucmlza2lQYWdlQnRuXCIpPy5yZW1vdmUoKTtcbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQUFx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
